<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
    xmlns:local="clr-namespace:iccms"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:TreeItemModel="clr-namespace:DataInterface;assembly=DataInterface"
    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
    mc:Ignorable="d">

    <!-- 主窗口样式 -->
    <LinearGradientBrush x:Key="WindowBrush" EndPoint="0.586,0.921" StartPoint="0.59,0.116">
        <GradientStop Color="#FF1D6885" Offset="0"/>
        <GradientStop Color="#FF219AC7" Offset="0.895"/>
    </LinearGradientBrush>

    <!-- 菜单样式 -->
    <LinearGradientBrush x:Key="MainMenuBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF164856" Offset="0.1"/>
        <GradientStop Color="#FF164856" Offset="0.9"/>
        <GradientStop Color="#FF36A9C9" Offset="0.5"/>
    </LinearGradientBrush>

    <!-- 弹框菜单样式 -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Foreground" Value="Bisque" />
        <Setter Property="FontFamily" Value="Default" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="#FF0B6B75" 
                                BorderThickness ="1,1,1,1" 
                                Background="#FF0B6B75" 
                                Opacity="1">
                        <ItemsPresenter Margin="2,2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 分隔线样式 -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="28,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="{TemplateBinding Width}" 
                                   Height="2" 
                                   Fill="DarkOrange"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 主菜单样式 -->
    <Style x:Key="MenuItemKey" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="Bisque" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="ChildItem" MinWidth="120">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <!--图标-->
                            <Rectangle Fill="{TemplateBinding Icon}" Margin="0,-1" Height="16" Width="16"></Rectangle>
                            <!--标题部分-->
                            <ContentPresenter VerticalAlignment="Center" 
                                                  Margin="8,0,20,0"
                                                  HorizontalAlignment="Left"
                                                  ContentSource="Header" 
                                                  Grid.Column="1" />
                            <!--子菜单-->
                            <Popup 
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                AllowsTransparency="True" 
                                Placement="Bottom">
                                <Border 
                                	BorderBrush="#FF0B6B75" 
                                	BorderThickness ="1,1,1,1" 
                                	Background="#FF0B6B75" 
                                	Opacity="1">
                                    <StackPanel Margin="2,2" IsItemsHost="True"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ChildItem" Property="Background" Value="#FF1CAB0C"/>
                            <Setter TargetName="ChildItem" Property="TextBlock.Foreground" Value="Yellow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ChildItem" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ChildItem" Property="Background" Value="#FF007ACC"/>
                            <Setter TargetName="ChildItem" Property="TextBlock.Foreground" Value="AliceBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ChildItem" Property="TextBlock.Foreground" Value="#70FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 子菜单样式 -->
    <Style x:Key="SubMenuItemKey" TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="ChildItem" MinWidth="120">
                        <Grid Height="22">
                            <Grid.ColumnDefinitions>
                                <!--图标-->
                                <ColumnDefinition Width="24"/>
                                <!--文字-->
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!--图标-->
                            <Rectangle Fill="{TemplateBinding Icon}" Margin="0,-1" Height="16" Width="16"></Rectangle>

                            <!--IsChecked 状态打勾 Converter={StaticResource ShowCheckeConverter} -->
                            <!--<Path Margin="5,-2,0,0" 
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Stroke="Black" 
                                      StrokeThickness="0"
                                      Fill="{TemplateBinding Icon}"
                                      Visibility="Visible"
                                      Data="M14,4 L6,12 5,12 1,8 3,6 5,8 6,8 12,2 z"
                                      Grid.Column="0"/>-->

                            <!--箭头-->
                            <Path x:Name="Arrow"
                                      Margin="0,0,2,0" 
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Stroke="Black" 
                                      StrokeThickness="0"
                                      Fill="Aqua"
                                      Visibility="Visible"
                                      Grid.Column="1" Data="M0,0 L0,6 L6,3 z"/>
                            <!--标题部分-->
                            <ContentPresenter VerticalAlignment="Center" 
                                                  Margin="8,0,20,0"
                                                  HorizontalAlignment="Left"
                                                  ContentSource="Header" 
                                                  Grid.Column="1" />
                            <!--子菜单-->
                            <Popup 
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True" 
                                       Placement="Right">
                                <Border 
                                	BorderBrush="#FF0B6B75" 
                                	BorderThickness ="1,1,1,1" 
                                	Background="#FF0B6B75" 
                                	Opacity="1">
                                    <StackPanel Margin="2,2" IsItemsHost="True"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Fill" Value="Yellow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ChildItem" Property="Background" Value="#FF1CAB0C"/>
                            <Setter TargetName="ChildItem" Property="TextBlock.Foreground" Value="Yellow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ChildItem" Property="Background" Value="#FF0B6B75"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ChildItem" Property="Background" Value="#FF007ACC"/>
                            <Setter TargetName="ChildItem" Property="TextBlock.Foreground" Value="AliceBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ChildItem" Property="TextBlock.Foreground" Value="#70FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 工具栏样式 -->
    <LinearGradientBrush x:Key="ToolBarBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="Black"/>
        <GradientStop Color="Black" Offset="1"/>
        <GradientStop Color="#FF00746E" Offset="0.5"/>
    </LinearGradientBrush>
    <Style x:Key="ToolBarElementStyle" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="#FF00D6D1"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label 
                        Content="{TemplateBinding Content}" 
                        Foreground="{TemplateBinding Foreground}" 
                        Background="{TemplateBinding Background}" 
                        VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        FontSize="{TemplateBinding FontSize}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Cursor="{TemplateBinding Cursor}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    </Label>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="2"></Setter>
                <Setter Property="BorderBrush" Value="Orange"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="Foreground" Value="Yellow"></Setter>
            </Trigger>

            <Trigger Property="IsFocused" Value="False">
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1 , 1, 1, 1"></Setter>
                <Setter Property="BorderBrush" Value="Orange"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="Foreground" Value="Yellow"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 设备树列表样式 -->
    <LinearGradientBrush x:Key="DeviceTreeListBrush" EndPoint="0.586,0.921" StartPoint="0.59,0.116">
        <GradientStop Color="#FF0F3949" Offset="0"/>
        <GradientStop Color="#FF0F556E" Offset="0.895"/>
    </LinearGradientBrush>

    <!-- 捕号窗口样式 -->
    <LinearGradientBrush x:Key="ScannerWindowBrush" EndPoint="0.586,0.921" StartPoint="0.59,0.116">
        <GradientStop Color="#FF0C2833" Offset="0"/>
        <GradientStop Color="#FF0C2C37" Offset="0.895"/>
    </LinearGradientBrush>

    <!-- 黑名追踪窗口样式 -->
    <LinearGradientBrush x:Key="BlackListWindowBrush" EndPoint="0.586,0.921" StartPoint="0.59,0.116">
        <GradientStop Color="#FF0B3241" Offset="0"/>
        <GradientStop Color="#FF0A3545" Offset="0.895"/>
    </LinearGradientBrush>

    <!-- 系统日志窗口样式 -->
    <LinearGradientBrush x:Key="SystemLogsWindowBrush" EndPoint="0.586,0.921" StartPoint="0.59,0.116">
        <GradientStop Color="#FF16495C" Offset="0"/>
        <GradientStop Color="#FF16495C" Offset="0.895"/>
    </LinearGradientBrush>

    <!-- 对话框窗口样式 -->
    <LinearGradientBrush x:Key="WindowBrushDialog" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF83AFF6" />
        <GradientStop Offset="0" Color="#FF3281C3" />
    </LinearGradientBrush>

    <!-- 子对话框窗口样式 -->
    <LinearGradientBrush x:Key="WindowBrushSubDialog" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0.2" Color="#FF55ABAB" />
        <GradientStop Offset="0.7" Color="#FF179899" />
    </LinearGradientBrush>

    <!-- 主窗口字体样式 -->
    <Style TargetType="Window">
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!-- 子窗口字体样式-->
    <Style TargetType="Page">
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <!-- 查询工具背景样式 -->
    <LinearGradientBrush x:Key="SearchBarWindowBrush" EndPoint="0.586,0.921" StartPoint="0.59,0.116">
        <GradientStop Color="#FF0C2833" Offset="0"/>
        <GradientStop Color="#FF0C2C37" Offset="0.895"/>
    </LinearGradientBrush>
    <!-- 捕号窗口查找工具栏字体样式 -->
    <LinearGradientBrush x:Key="SearchBarCaption" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF00D6D1" />
        <GradientStop Offset="0" Color="#FF00D6D1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SearchBarEdit" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF1E4D2B" />
        <GradientStop Offset="0" Color="#FF1E4D2B" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SearchBarText" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF51FF55" />
        <GradientStop Offset="0" Color="#FF51FF55" />
    </LinearGradientBrush>
    <!-- 捕号窗口数据表字体样式 -->
    <!--手动配置...-->

    <!-- 黑名单窗口查找工具栏字体样式 -->
    <LinearGradientBrush x:Key="BlackListSearchBarCaption" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF00D6D1" />
        <GradientStop Offset="0" Color="#FF00D6D1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlackListSearchBarEdit" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF1E4D2B" />
        <GradientStop Offset="0" Color="#FF1E4D2B" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlackListSearchBarText" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="1" Color="#FF51FF55" />
        <GradientStop Offset="0" Color="#FF51FF55" />
    </LinearGradientBrush>
    <!-- 黑名单窗口数据表字体样式 -->
    <LinearGradientBrush x:Key="BlackListDataMessageStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF70C44A"></GradientStop>
        <GradientStop Offset="1" Color="#FF70C44A"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlackListDataKeyWordStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="Bisque"></GradientStop>
        <GradientStop Offset="1" Color="Bisque"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlackListDataParaStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFDCEC81"></GradientStop>
        <GradientStop Offset="1" Color="#FFDCEC81"></GradientStop>
    </LinearGradientBrush>
    <!-- 通话记录数据样式-->
    <LinearGradientBrush x:Key="PhoneNumberDataMessageStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF70C44A"></GradientStop>
        <GradientStop Offset="1" Color="#FF70C44A"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PhoneNumberDataKeyWordStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="Bisque"></GradientStop>
        <GradientStop Offset="1" Color="Bisque"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PhoneNumberDataParaStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#F0F8FFFF"></GradientStop>
        <GradientStop Offset="1" Color="#F0F8FFFF"></GradientStop>
    </LinearGradientBrush>
    <!-- 短信息记录数据样式-->
    <LinearGradientBrush x:Key="SMSDataMessageStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF70C44A"></GradientStop>
        <GradientStop Offset="1" Color="#FF70C44A"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SMSDataKeyWordStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="Bisque"></GradientStop>
        <GradientStop Offset="1" Color="Bisque"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SMSDataParaStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#F0F8FFFF"></GradientStop>
        <GradientStop Offset="1" Color="#F0F8FFFF"></GradientStop>
    </LinearGradientBrush>
    <!-- 系统日志字体样式 -->
    <LinearGradientBrush x:Key="LogsDataMessageStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF70C44A"></GradientStop>
        <GradientStop Offset="1" Color="#FF70C44A"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LogsDataKeyWordStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFDCEC81"></GradientStop>
        <GradientStop Offset="1" Color="#FFDCEC81"></GradientStop>
    </LinearGradientBrush>
    <!-- 数据统计栏字体样式 -->
    <LinearGradientBrush x:Key="SummaryBarWinStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF0C2833" Offset="0"/>
        <GradientStop Color="#FF0C2C37" Offset="0.895"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SummaryBarCaptionStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="AntiqueWhite"></GradientStop>
        <GradientStop Offset="1" Color="AntiqueWhite"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SummaryBarBackGroundStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFDCEC81"></GradientStop>
        <GradientStop Offset="1" Color="#FFDCEC81"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SummaryBarForeGroundStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="Orange"></GradientStop>
        <GradientStop Offset="1" Color="Orange"></GradientStop>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WelcomeStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="Orange"></GradientStop>
        <GradientStop Offset="1" Color="Orange"></GradientStop>
    </LinearGradientBrush>

    <!-- 各数据表边框样式 -->
    <LinearGradientBrush x:Key="DataModuleBorderStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF62A0AF"></GradientStop>
        <GradientStop Offset="1" Color="#FF62A0AF"></GradientStop>
    </LinearGradientBrush>

    <!-- 分割线样式 -->
    <LinearGradientBrush x:Key="GridSplitterStyle" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="Orange"></GradientStop>
        <GradientStop Offset="1" Color="Orange"></GradientStop>
    </LinearGradientBrush>

    <!--  GroupBox样式  -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style x:Key="GroupboxWithoutWhiteBorder" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                        <Border
                            Name="Header"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Padding="3,1,3,0">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  按扭样式  -->
    <Style TargetType="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="ButtonBorder"
                        Background="#AA000000"
                        BorderBrush="#99FFFFFF"
                        BorderThickness="1,1,1,1"
                        CornerRadius="5,5,5,5"
                        RenderTransformOrigin="0.5,0.5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="1.7*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" CornerRadius="3,3,0,0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#08FFFFFF" />
                                        <GradientStop Offset="1" Color="#88FFFFFF" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter
                                x:Name="ButtonContentPresenter"
                                Grid.RowSpan="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Orange" />
                            <Setter TargetName="ButtonBorder" Property="Background" Value="SeaGreen" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Orange" />
                            <Setter TargetName="ButtonBorder" Property="Background" Value="Red" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Orange" />
                            <Setter TargetName="ButtonBorder" Property="Background" Value="ForestGreen" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  密码输入框样式  -->
    <Style TargetType="PasswordBox">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Transparent" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#FFFFFFFF" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  输入框样式  -->
    <Style TargetType="TextBox">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Transparent" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#FFFFFFFF" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  登录界面背景样式  -->
    <ImageBrush x:Key="LoginWindowBrush"
        ImageSource="BackGround\BGNu.png"
        Opacity="1.0">
    </ImageBrush>

    <!--  登录窗体字体样式  -->
    <LinearGradientBrush x:Key="LoginWindowFontColor" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="Beige" />
        <GradientStop Offset="0.5" Color="Beige" />
        <GradientStop Offset="1" Color="Beige" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="InputDialogFontColor" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="White" />
        <GradientStop Offset="0.5" Color="Transparent" />
        <GradientStop Offset="0.0" Color="White" />
    </LinearGradientBrush>

    <!--  进度条样式  -->
    <LinearGradientBrush x:Key="ProgressBarBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="#007EF8" />
        <GradientStop Offset="0.5" Color="#007EF8" />
        <GradientStop Offset="1" Color="#007EF8" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinWidth="200" MinHeight="14">
                        <Border
                            Name="PART_Track"
                            Background="#366592"
                            BorderBrush="#366592"
                            BorderThickness="1"
                            CornerRadius="10" />
                        <Border
                            x:Name="PART_Indicator"
                            HorizontalAlignment="Left"
                            BorderBrush="#366592"
                            BorderThickness="1"
                            CornerRadius="10">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#007EF8" />
                                    <GradientStop Offset="0.5" Color="#007EF8" />
                                    <GradientStop Offset="1" Color="#007EF8" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--===================================树列表项样式================================-->
    <!--  设备列表字体颜色  -->
    <LinearGradientBrush x:Key="DeviceNameTextBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="Bisque" />
        <GradientStop Offset="0.5" Color="Bisque" />
        <GradientStop Offset="1" Color="Bisque" />
    </LinearGradientBrush>
    <!--Toggle Button-->
    <local:TreeViewLineConverter x:Key="LineConverter"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="12" Height="12" SnapsToDevicePixels="True">
                        <Rectangle Width="12" Height="12" Stroke="#919191" SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Silver" Offset="0.5"/>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--按扭-->
                        <Line x:Name="ExpandPath"   X1="6" Y1="2" X2="6" Y2="10" StrokeThickness="1" Stroke="Black"></Line>
                        <Line x:Name="UnExpandPath" X1="2" Y1="6" X2="10" Y2="6" StrokeThickness="1" Stroke="Black"></Line>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TreeViewItem-->
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Bisque"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <!--虚线-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True" StrokeDashArray="1,3"/>
                        <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" StrokeDashArray="1,4" Fill="White"/>

                        <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>

                        <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="12"/>
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="#FF275B34"/>
                            <Setter Property="Foreground" Value="BurlyWood"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--=========================================================================-->

    <!--  选项卡标签样式  -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border
                            Name="Border"
                            Width="Auto"
                            Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderBrush="Black"
                            BorderThickness="1,1,1,1"
                            CornerRadius="0,0,15,0"
                            Cursor="Hand">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="4,4,4,4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Red" />
                                        <GradientStop Offset="0.8" Color="ForestGreen" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Gray" />
                                        <GradientStop Offset="1" Color="DarkGray" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Azure" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  行标题属性设置  -->
    <Style x:Key="dataGridRowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="Width" Value="0" />
    </Style>

    <!--  列标题属性设置  -->
    <Style x:Key="dataGridColumnStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="BorderBrush" Value="#FF766E6E" />
        <Setter Property="BorderThickness" Value="0.4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="dataGridStyle" TargetType="DataGrid">
        <!--<Setter Property="Margin" Value="5,-110,5,50"></Setter>-->
        <Setter Property="HorizontalGridLinesBrush" Value="#FF766E6E" />
        <Setter Property="VerticalGridLinesBrush" Value="#FF766E6E" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#EEEEEE" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>


    <Style x:Key="dataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="29" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#a2a2a0" />
                <Setter Property="Background" Value="#c4cec5" />
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="微软雅黑" />
                <Setter Property="FontWeight" Value="UltraBlack" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  圆形进度条样式  -->
    <Grid
        x:Key="RoundProgressBar"
        x:Name="LayoutRoot"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent">
        <Grid.RenderTransform>
            <ScaleTransform
                x:Name="SpinnerScale"
                ScaleX="1.0"
                ScaleY="1.0" />
        </Grid.RenderTransform>
        <Canvas
            Width="120"
            Height="120"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RenderTransformOrigin="0.5,0.5">
            <Ellipse
                Canvas.Left="20.1696"
                Canvas.Top="9.76358"
                Width="21.835"
                Height="21.862"
                Fill="Orange"
                Opacity="1.0"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="2.86816"
                Canvas.Top="29.9581"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.9"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="5.03758e-006"
                Canvas.Top="57.9341"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.8"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="12.1203"
                Canvas.Top="83.3163"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.7"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="36.5459"
                Canvas.Top="98.138"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.6"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="64.6723"
                Canvas.Top="96.8411"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.5"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="87.6176"
                Canvas.Top="81.2783"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.4"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="98.165"
                Canvas.Top="54.414"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.3"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="92.9838"
                Canvas.Top="26.9938"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.2"
                Stretch="Fill" />
            <Ellipse
                Canvas.Left="47.2783"
                Canvas.Top="0.5"
                Width="21.835"
                Height="21.862"
                Fill="Black"
                Opacity="0.1"
                Stretch="Fill" />
            <Canvas.RenderTransform>
                <RotateTransform x:Name="SpinnerRotate" Angle="0" />
            </Canvas.RenderTransform>
            <Canvas.Triggers>
                <EventTrigger RoutedEvent="ContentControl.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="SpinnerRotate"
                                Storyboard.TargetProperty="(RotateTransform.Angle)"
                                From="0"
                                To="360"
                                Duration="0:0:01" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Canvas.Triggers>
        </Canvas>
    </Grid>

    <!--  ComboBox下拉条目样式  -->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Margin="0,0.5" Background="{TemplateBinding Background}">
                        <Border
                            x:Name="ItemBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  下拉按钮  -->
    <Style x:Key="ComboxStyleBtn" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        x:Name="Back"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1">
                        <Path
                            Name="PathFill"
                            Width="8"
                            Height="6"
                            Data="M5,0 L10,10 L0,10 z"
                            Fill="#59CA4F"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="DodgerBlue" />
                            <Setter TargetName="Back" Property="Background" Value="#59CA4F" />
                            <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--  ComboBoxItem  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22" />
                    <Setter Property="MinWidth" Value="60" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Name="Back"
                                    Background="Transparent"
                                    BorderBrush="#81D779"
                                    BorderThickness="0,0,0,0">
                                    <ContentPresenter
                                        Margin="5,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ContentSource="{Binding Source}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="Aqua" />
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="Orange" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.7*" />
                            <ColumnDefinition Width="0.3*" MaxWidth="30" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            BorderBrush="{x:Null}"
                            BorderThickness="0"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Text="{TemplateBinding Text}" />
                        <Border
                            Grid.Column="0"
                            BorderBrush="#81D779"
                            BorderThickness="1,1,0,1"
                            CornerRadius="1,0,0,1" />
                        <Border
                            Grid.Column="1"
                            BorderBrush="#81D779"
                            BorderThickness="0,1,1,1"
                            CornerRadius="0,1,1,0">
                            <ToggleButton
                                ClickMode="Press"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboxStyleBtn}" />
                        </Border>
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Border
                                x:Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                CornerRadius="1"
                                SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="2"
                                        Opacity="0.5"
                                        ShadowDepth="0"
                                        Color="Black" />
                                </Border.Effect>
                                <ScrollViewer
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Margin="4,6,4,6"
                                    CanContentScroll="True"
                                    HorizontalScrollBarVisibility="Auto"
                                    SnapsToDevicePixels="True"
                                    Style="{DynamicResource ScrollViewerStyle}"
                                    VerticalScrollBarVisibility="Auto">
                                    <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                    <StackPanel
                                        Background="DodgerBlue"
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollViewer样式  -->
    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  右下角四方形  -->
                        <Rectangle
                            x:Name="Corner"
                            Grid.Row="1"
                            Grid.Column="1"
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        <!--  内容区域  -->
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <!--  竖直滚动条  -->
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            Style="{DynamicResource ScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <!--  水平滚动条  -->
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            Style="{DynamicResource ScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalScrollBarVisibility" Value="Disabled" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Theum  -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        x:Name="border"
                        Background="#ACACAC"
                        BorderThickness="0"
                        CornerRadius="3" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#888888" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  滚动条样式  -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="Bg"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <!--  上箭头  -->
                        <RepeatButton
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{DynamicResource ArrowDownPathButton}" />
                        <!--  滑动条 ？ 是不是Slider中的滑动条？？？ -是  -->
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <!--  滑动条上部区域  -->
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <!--  滑动条部分  -->
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <!--  滑动条下部区域  -->
                            <Track.Thumb>
                                <Thumb Margin="3,0,3,0" Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <!--  下箭头  -->
                        <RepeatButton
                            Grid.Row="2"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Style="{DynamicResource ArrowUpPathButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  水平摆放时  -->
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid
                                x:Name="Bg"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton
                                    Command="{x:Static ScrollBar.LineLeftCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{DynamicResource ArrowLeftPathButton}" />
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Column="1"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Margin="0,3,0,3" Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton
                                    Grid.Column="2"
                                    Command="{x:Static ScrollBar.LineRightCommand}"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Style="{DynamicResource ArrowRightPathButton}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  下箭头  -->
    <Style x:Key="ArrowDownPathButton" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <Path
                            x:Name="PathFill"
                            Width="13"
                            Height="8"
                            Data="M5.0000001,0 L10,10 L-2.0915641E-08,10 z"
                            Fill="#868999"
                            RenderTransformOrigin="0.500000001045782,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#1C97EA" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#FF4D84AE" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  上箭头  -->
    <Style x:Key="ArrowUpPathButton" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <Path
                            x:Name="PathFill"
                            Width="13"
                            Height="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M5.0000001,0 L10,10 L-2.0915641E-08,10 z"
                            Fill="#868999"
                            RenderTransformOrigin="0.500000001045782,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#1C97EA" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#FF4D84AE" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  左箭头  -->
    <Style x:Key="ArrowLeftPathButton" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <Path
                            x:Name="PathFill"
                            Width="13"
                            Height="8"
                            Data="M5.0000001,0 L10,10 L-2.0915641E-08,10 z"
                            Fill="#868999"
                            RenderTransformOrigin="0.500000001045782,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#1C97EA" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#FF4D84AE" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  右箭头  -->
    <Style x:Key="ArrowRightPathButton" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                        <Path
                            x:Name="PathFill"
                            Width="13"
                            Height="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M5.0000001,0 L10,10 L-2.0915641E-08,10 z"
                            Fill="#868999"
                            RenderTransformOrigin="0.500000001045782,0.5"
                            Stretch="Fill"
                            StrokeThickness="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#1C97EA" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#FF4D84AE" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
